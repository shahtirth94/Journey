import java.util.Scanner;

/**Class: Player.java 
 * @author dericuspaul 
 * @version 1.0 <p> 
 * Course : ITEC 3150 Spring 2015
 * Written: Mar 30, 2015 
 * 
 * 
 * This class â€“ Class describes player with name and controls the scores with questions answered
 */

public class Player
{
	//class variables
	private int wrongCount = 0;
	private Location currentRoom;
	private static Scanner stdIn = new Scanner(System.in);

	//Instance variables
	public String name;
	public Score score;



	/**
	 * No arg Constructor for Player class
	 */
	Player()
	{
		this.score = new Score();
		String[] values = Location.playerPicksLocation();
		this.currentRoom = new Location(values[0], values[1]);
	}

	/**
	 * Two arg constructor for Player class
	 * @param name
	 * @param score
	 */
	public Player(String name, Score score)
	{
		super();
		this.name = name;
		this.score = score;

	}


	/**
	 * Method getName that returns name of player
	 * @return name
	 */
	public String getName()
	{
		return name;
	}


	/**
	 * Method setName that sets name to player
	 * @param name
	 */
	public void setName(String name)
	{
		this.name = name;
	}


	/**
	 * Method getScore get the player score
	 * @return score
	 */
	public int getScore()
	{
		return score.getScore();
	}


	/**
	 * Method setScore that set player score
	 * @param score
	 */
	public void setScore(int score)
	{
		this.score.setScore(score);;
	}


	/**
	 * method wrongAnswer that increments wrong answers to questions
	 */
	public void wrongAnswer()
	{
		wrongCount++;
	}

	/**
	 * Method correctAnswer that tracks correct answers to questions with score
	 */
	public void correctAnswer()
	{
		score.correct();
		wrongCount = 0;
	}

	/**
	 * Method answerQuestion that controls how questions are answered controlling the score with the 
	 * choice of questions
	 */
	public void answerQuestion()
	{
		//grab location object
		String l = Location.playerPicksLocation()[1];//grabs the monster name
		//call presentPickedRoom()
		//call getQuestion() from monster object
		//Question q = l.getQuestion();
		//print out the Question object (should look like multiple choice)
		//System.out.println(q); // if all goes well in the toString, it should look like multiple choice

		boolean inQuestion = true;
		while (inQuestion)
		{

			System.out.println("Choose the correct letter ('a', 'b', 'c' or 'd')");
			String choice = stdIn.nextLine().toLowerCase();
			int answer = 0;
			if (choice.equals("a"))
			{
				answer = 0;
			}
			else if (choice.equals("b"))
			{
				answer = 1;
			}
			else if (choice.equals("c"))
			{
				answer = 2;
			}
			else if (choice.equals("d"))
			{
				answer = 3;
			}

			/**if (q.getAnswer().equals(q.getChoices(answer)))
			{
				correctAnswer();
				inQuestion = false;
				//move to another room if you get the right answer
			}**/
			else
			{
				wrongAnswer();
				if (wrongCount > 2)
				{
					score.reset();
					wrongCount = 0;
					inQuestion = false;
					//move to the room at the beginning of the game
				}
			}
		}


	}

	/**
	 * 
	 * @param args
	 */
	public static void main(String[] args)
	{
		Player p = new Player();
		p.answerQuestion();
	}







}
